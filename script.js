'use strict';

document.addEventListener('DOMContentLoaded', () => {

    // --- Element References ---
    const loadingErrorDiv = document.getElementById('loading-error-message');
    const shopTabsContainer = document.getElementById('shop-tabs-container');
    const addTabButton = document.getElementById('add-tab-btn');
    const newShopInputContainer = document.getElementById('new-shop-input-container');
    const newShopNameInput = document.getElementById('new-shop-name-input');
    const saveNewShopButton = document.getElementById('save-new-shop-btn');
    const cancelNewShopButton = document.getElementById('cancel-new-shop-btn');
    const tabContentArea = document.getElementById('tab-content-area');
    const noShopPlaceholder = document.getElementById('no-shop-placeholder');
    const overallSummaryContainer = document.getElementById('overall-summary-container');
    const overallSummaryButton = document.getElementById('overall-summary-btn');
    const summaryModal = document.getElementById('summaryModal');
    const summaryContent = document.getElementById('summaryContent');
    const summaryTimestampElem = document.getElementById('summary-timestamp');
    const copyStatus = document.getElementById('copy-status');
    const modalActionsDiv = summaryModal?.querySelector('.modal-actions');
    const modalCloseButton = document.getElementById('modal-close-btn');
    const copySummaryButton = document.getElementById('copy-summary-btn');
    const closeModalActionButton = document.getElementById('close-modal-action-btn');

    // --- Constants ---
    const BASE_UNITS = ["‡∏Å‡∏Å.", "‡∏Å‡∏£‡∏±‡∏°", "‡∏Ç‡∏µ‡∏î", "‡∏Å‡∏•‡πà‡∏≠‡∏á", "‡∏Å‡∏≥", "‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á", "‡∏Ç‡∏ß‡∏î", "‡∏Ç‡∏∂‡πâ‡∏ô‡∏â‡πà‡∏≤‡∏¢", "‡∏ä‡∏∏‡∏î", "‡∏ä‡∏¥‡πâ‡∏ô", "‡∏ä‡πà‡∏≠", "‡∏ã‡∏≠‡∏á", "‡∏ï‡πâ‡∏ô", "‡∏ñ‡∏∏‡∏á", "‡πÅ‡∏ú‡πà‡∏ô", "‡πÅ‡∏ú‡∏á", "‡πÅ‡∏ñ‡∏ß", "‡∏ú‡∏•", "‡πÉ‡∏ö", "‡∏õ‡∏µ‡πä‡∏ö", "‡∏û‡∏ß‡∏á", "‡πÅ‡∏û‡πá‡∏Ñ", "‡∏ü‡∏≠‡∏á", "‡∏°‡πâ‡∏ß‡∏ô", "‡∏°‡∏±‡∏î", "‡πÄ‡∏°‡∏ï‡∏£", "‡∏•‡∏±‡∏á", "‡∏•‡∏π‡∏Å", "‡πÄ‡∏™‡πâ‡∏ô", "‡∏´‡∏ô‡πà‡∏ß‡∏¢", "‡∏≠‡∏±‡∏ô", "‡∏´‡∏±‡∏ß", "‡∏´‡∏ß‡∏µ", "‡πÇ‡∏´‡∏•"].sort((a, b) => a.localeCompare(b, 'th'));
    const GLOBAL_ITEMS_DATALIST_ID = 'global-items-list';
    const GLOBAL_UNITS_DATALIST_ID = 'global-units-list';
    const ITEMS_JSON_PATH = 'items.json';
    const SAVE_CHANGES_BTN_ID = 'save-summary-changes-btn';

    // --- State Variables ---
    let masterItemList = [];
    let shops = []; // State ‡∏´‡∏•‡∏±‡∏Å ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    let activeShopId = null; // ID ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà
    let summaryModalShopId = null; // ID ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡πÉ‡∏ô Modal ‡∏™‡∏£‡∏∏‡∏õ
    let hasUnsavedChanges = false; // Flag ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô Modal

    // V17: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    const initialShopsData = [
         { id: `shop-init-${Date.now()+1}`, name: '‡∏ô‡πâ‡∏≤‡πÑ‡∏ù', items: [] }, // ‡πÉ‡∏ä‡πâ timestamp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ ID ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏á‡πà‡∏≤‡∏¢‡πÜ
         { id: `shop-init-${Date.now()+2}`, name: '‡∏ô‡πâ‡∏≤‡πÑ‡∏û', items: [] },
         { id: `shop-init-${Date.now()+3}`, name: '‡∏ô‡πâ‡∏≤‡∏£‡∏∏‡πà‡∏á', items: [] },
    ];

    // --- V17: Rendering Functions ---

    /** V17: ‡∏ß‡∏≤‡∏î‡πÅ‡∏ñ‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö X ‡∏ö‡∏ô‡πÅ‡∏ó‡πá‡∏ö) */
    function renderTabs() {
        console.log("renderTabs called. ActiveShopId:", activeShopId);
        if (!shopTabsContainer || !addTabButton) { console.error("renderTabs: Missing elements"); return; }
        const previouslyFocusedElement = document.activeElement;
        // Clear old tabs
        Array.from(shopTabsContainer.children).forEach(child => {
            if (child !== addTabButton && child !== newShopInputContainer) {
                shopTabsContainer.removeChild(child);
            }
        });

        // Create new tabs from state
        shops.forEach(shop => {
            const tabButton = document.createElement('button');
            tabButton.className = 'tab-button';
            tabButton.dataset.shopId = shop.id; // ‡πÉ‡∏™‡πà shopId ‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏•‡∏±‡∏Å (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ó‡πá‡∏ö)

            const tabNameSpan = document.createElement('span');
            tabNameSpan.className = 'tab-name';
            tabNameSpan.textContent = shop.name;

            // V17: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö '√ó' ‡πÉ‡∏™‡πà‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö
            const deleteTabBtn = document.createElement('button');
            deleteTabBtn.className = 'delete-tab-btn'; // Class ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡πÅ‡∏ó‡πá‡∏ö
            deleteTabBtn.innerHTML = '&times;'; // ‡πÉ‡∏ä‡πâ √ó (multiplication sign)
            deleteTabBtn.title = `‡∏•‡∏ö‡∏£‡πâ‡∏≤‡∏ô ${shop.name}`;
            deleteTabBtn.dataset.shopId = shop.id; // ‡πÉ‡∏™‡πà shopId ‡∏ó‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏î‡πâ‡∏ß‡∏¢ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏ö)
            // Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÉ‡∏ä‡πâ delegation ‡∏ó‡∏µ‡πà setupEventListeners

            tabButton.appendChild(tabNameSpan);
            tabButton.appendChild(deleteTabBtn); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö

            if (shop.id === activeShopId) {
                tabButton.classList.add('active');
            }
            // Listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö *‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ó‡πá‡∏ö*
            tabButton.addEventListener('click', handleTabClick);

            shopTabsContainer.insertBefore(tabButton, addTabButton);
        });

        // Restore focus
        if (document.body.contains(previouslyFocusedElement)) {
             try { previouslyFocusedElement.focus({ preventScroll: true }); } catch (e) {}
        } else if (activeShopId) {
             const activeTabButton = shopTabsContainer.querySelector(`.tab-button[data-shop-id="${activeShopId}"]`);
             activeTabButton?.focus({ preventScroll: true });
        }
        updateOverallSummaryButtonVisibility();
    }

    /** V17: ‡∏ß‡∏≤‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡πÄ‡∏û‡∏¥‡πà‡∏° List Area ‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô) */
    function renderTabContent() {
        console.log("renderTabContent called. ActiveShopId:", activeShopId);
        if (!tabContentArea) { console.error("renderTabContent: Missing tabContentArea"); return; }
        tabContentArea.innerHTML = '';
        const activeShop = shops.find(shop => shop.id === activeShopId);

        if (activeShop) {
            console.log("Rendering content for shop:", activeShop.name);
            // --- Header (V17: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß) ---
            const headerDiv = document.createElement('div');
            headerDiv.className = 'shop-header';
            const shopNameDisplay = document.createElement('span');
            shopNameDisplay.className = 'shop-name-display';
            shopNameDisplay.textContent = activeShop.name;
            headerDiv.appendChild(shopNameDisplay);
            tabContentArea.appendChild(headerDiv);

            // --- Item Entry Area (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
            const entryArea = createItemEntryArea(activeShop.id);
            tabContentArea.appendChild(entryArea);

            // --- V17: ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß (Scrollable List) ---
            const itemListArea = document.createElement('div');
            itemListArea.className = 'item-list-area'; // Class ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏™‡πÑ‡∏ï‡∏•‡πå (scrollable)
            itemListArea.id = `item-list-${activeShop.id}`; // ID ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ

            const ul = document.createElement('ul');
            if (activeShop.items.length > 0) {
                activeShop.items.forEach((item, index) => {
                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö inline
                    ul.appendChild(createShopItemRow(activeShop.id, item, index));
                });
            } else {
                ul.innerHTML = '<li class="item-list-placeholder">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ...</li>';
            }
            itemListArea.appendChild(ul);
            tabContentArea.appendChild(itemListArea); // ‡πÄ‡∏û‡∏¥‡πà‡∏° List Area ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢

            // --- Actions (‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏£‡∏∏‡∏õ/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ---
            const buttonsDiv = document.createElement('div');
            buttonsDiv.className = 'shop-actions';
            const summarizeBtn = document.createElement('button');
            summarizeBtn.textContent = 'üìã ‡∏™‡∏£‡∏∏‡∏õ/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            summarizeBtn.className = 'action-button summarize-btn';
            summarizeBtn.type = "button";
            summarizeBtn.addEventListener('click', () => showSummary(activeShopId));
            buttonsDiv.appendChild(summarizeBtn);
            tabContentArea.appendChild(buttonsDiv);

            if(noShopPlaceholder) noShopPlaceholder.style.display = 'none';
        } else {
            console.log("No active shop, showing placeholder.");
            if(noShopPlaceholder) noShopPlaceholder.style.display = 'block';
        }
    }

    /** V17: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô List Area (‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö inline) */
    function createShopItemRow(shopId, itemData, index) {
        const li = document.createElement('li');
        li.className = 'shop-item-row'; // Class ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå
        li.dataset.shopId = shopId;
        li.dataset.itemIndex = index; // ‡πÄ‡∏Å‡πá‡∏ö index ‡πÑ‡∏ß‡πâ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ï‡∏≠‡∏ô‡∏•‡∏ö

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á span ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        const quantitySpan = document.createElement('span');
        quantitySpan.className = 'item-quantity';
        quantitySpan.textContent = itemData.quantity;

        const unitSpan = document.createElement('span');
        unitSpan.className = 'item-unit';
        unitSpan.textContent = itemData.unit || '?';

        const nameSpan = document.createElement('span');
        nameSpan.className = 'item-name';
        nameSpan.textContent = itemData.item;

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö (‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞)
        const deleteBtn = document.createElement('button');
        deleteBtn.className = 'delete-item-inline-btn'; // Class ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏ô‡∏µ‡πâ
        deleteBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash-2"><path d="M3 6h18"/><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"/><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"/><line x1="10" x2="10" y1="11" y2="17"/><line x1="14" x2="14" y1="11" y2="17"/></svg>`;
        deleteBtn.title = `‡∏•‡∏ö ${itemData.item}`;
        // Listener ‡∏à‡∏∞‡πÉ‡∏ä‡πâ delegation ‡∏ó‡∏µ‡πà setupEventListeners

        // ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏£‡πà‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß
        li.appendChild(quantitySpan);
        li.appendChild(unitSpan);
        li.appendChild(nameSpan);
        li.appendChild(deleteBtn); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö

        return li;
    }

    // --- UI Creation Functions (‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
    function createOrUpdateDatalist(listId, optionsArray) { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        let datalist = document.getElementById(listId); if (!datalist) { datalist = document.createElement('datalist'); datalist.id = listId; document.body.appendChild(datalist); datalist = document.getElementById(listId); if (!datalist) { console.error(`!!! ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏´‡∏≤ datalist ID: ${listId} ‡πÑ‡∏î‡πâ!`); return; } } datalist.innerHTML = ''; if (!Array.isArray(optionsArray)) { console.error(`‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö datalist ID: ${listId} ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Array!`); return; } const sortedOptions = [...optionsArray].sort((a, b) => a.localeCompare(b, 'th')); sortedOptions.forEach(optionValue => { if (typeof optionValue === 'string' && optionValue.trim() !== '') { try { const option = document.createElement('option'); option.value = optionValue; datalist.appendChild(option); } catch (e) { console.error(`‡πÄ‡∏Å‡∏¥‡∏î Error ‡∏ï‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏° option "${optionValue}" ‡πÉ‡∏ô datalist ID: ${listId}`, e); } } });
    }
    function createUnitInputEntry(selectedUnit = '') { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        const input = document.createElement('input'); input.type = 'text'; input.placeholder = '‡∏´‡∏ô‡πà‡∏ß‡∏¢'; input.className = 'entry-unit'; input.value = selectedUnit; input.setAttribute('list', GLOBAL_UNITS_DATALIST_ID); return input;
    }
    function createItemInputEntry(selectedItem = '') { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        const input = document.createElement('input'); input.type = 'text'; input.placeholder = '‡πÉ‡∏™‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏Å‡∏î + ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°...'; input.className = 'entry-item'; input.value = selectedItem; input.setAttribute('list', GLOBAL_ITEMS_DATALIST_ID); return input;
    }
    function createItemEntryArea(shopId) { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏° - SVG included) */
        const entryDiv = document.createElement('div'); entryDiv.className = 'item-entry-area'; entryDiv.dataset.shopId = shopId;
        const quantityInput = document.createElement('input'); quantityInput.type = 'number'; quantityInput.placeholder = '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'; quantityInput.min = "0"; quantityInput.step = "any"; quantityInput.className = 'entry-quantity';
        const unitInput = createUnitInputEntry(); const itemInput = createItemInputEntry();
        const addBtn = document.createElement('button'); addBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-plus"><line x1="12" x2="12" y1="5" y2="19"/><line x1="5" x2="19" y1="12" y2="12"/></svg>`; addBtn.className = 'action-button entry-add-btn'; addBtn.title = "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ"; addBtn.type = "button";
        const statusDiv = document.createElement('div'); statusDiv.className = 'entry-status';
        entryDiv.appendChild(quantityInput); entryDiv.appendChild(unitInput); entryDiv.appendChild(itemInput); entryDiv.appendChild(addBtn); entryDiv.appendChild(statusDiv); return entryDiv;
    }

    // --- V17.1: Event Handlers ---

    /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ó‡πá‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ (Delegated - ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÅ‡∏ó‡πá‡∏ö ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö) */
    function handleTabClick(event) {
        // (‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å V16.1)
        if (event.target.closest('.delete-tab-btn')) { event.stopPropagation(); return; }
        const clickedTab = event.target.closest('.tab-button'); if (!clickedTab || clickedTab.classList.contains('active')) { return; }
        const newActiveShopId = clickedTab.dataset.shopId; console.log("Tab selected:", newActiveShopId);
        if (newActiveShopId) { activeShopId = newActiveShopId; renderTabs(); renderTabContent(); }
    }

    /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° + ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà */
    function handleAddTabClick() { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        console.log("Add tab button clicked"); if (newShopInputContainer && addTabButton && newShopNameInput) { newShopInputContainer.classList.remove('hidden'); addTabButton.classList.add('hidden'); newShopNameInput.value = ''; newShopNameInput.focus(); console.log("Showing new shop input"); } else { console.error("handleAddTabClick: Missing required elements"); }
    }
    /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà */
    function handleCancelNewShop() { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        console.log("Cancel new shop"); if (newShopInputContainer && addTabButton) { newShopInputContainer.classList.add('hidden'); addTabButton.classList.remove('hidden'); newShopNameInput.value = ''; } else { console.error("handleCancelNewShop: Missing required elements"); }
    }
    /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà */
    function handleSaveNewShop() { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        console.log("Save new shop clicked"); if (!newShopNameInput) { console.error("handleSaveNewShop: Missing newShopNameInput"); return; } const newName = newShopNameInput.value.trim(); if (!newName) { alert("‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô! ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏¢‡∏ô‡∏∞"); newShopNameInput.focus(); return; } if (shops.some(shop => shop.name.toLowerCase() === newName.toLowerCase())) { alert(`‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô! ‡∏°‡∏µ‡∏£‡πâ‡∏≤‡∏ô‡∏ä‡∏∑‡πà‡∏≠ "${newName}" ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞`); newShopNameInput.focus(); newShopNameInput.select(); return; } const newShopId = `shop-${Date.now()}`; const newShopData = { id: newShopId, name: newName, items: [] }; shops.push(newShopData); activeShopId = newShopId; console.log("New shop added:", newShopData); renderTabs(); renderTabContent(); handleCancelNewShop(); /* TODO: Save state */
    }

     /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡πâ‡∏≤‡∏ô (X ‡∏ö‡∏ô‡πÅ‡∏ó‡πá‡∏ö) (Delegated) */
    function handleDeleteShopClick(event) {
        const deleteButton = event.target.closest('.delete-tab-btn'); // V17.1: ‡πÉ‡∏ä‡πâ selector ‡∏ô‡∏µ‡πâ
        if (!deleteButton) return;

        const shopIdToDelete = deleteButton.dataset.shopId;
        const shopToDelete = shops.find(s => s.id === shopIdToDelete);
        console.log("Delete tab button clicked for:", shopIdToDelete, shopToDelete?.name);

        if (!shopToDelete) return;

        if (confirm(`‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏∞‡∏•‡∏ö‡∏£‡πâ‡∏≤‡∏ô "${shopToDelete.name}" ‡∏à‡∏£‡∏¥‡∏á‡∏î‡∏¥? ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏´‡∏≤‡∏¢‡∏´‡∏°‡∏î‡∏ô‡∏∞!`)) {
            const indexToDelete = shops.findIndex(s => s.id === shopIdToDelete);
            if (indexToDelete > -1) {
                shops.splice(indexToDelete, 1);
                console.log("Shop removed from state.");

                // ‡∏´‡∏≤‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏à‡∏∞ active ‡∏ï‡πà‡∏≠‡πÑ‡∏õ
                if (activeShopId === shopIdToDelete) {
                    if (shops.length === 0) { activeShopId = null; }
                    else if (indexToDelete >= shops.length) { activeShopId = shops[shops.length - 1].id; }
                    else { activeShopId = shops[indexToDelete].id; }
                    console.log("New activeShopId:", activeShopId);
                }

                renderTabs();
                renderTabContent(); // Render content ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà (‡∏´‡∏£‡∏∑‡∏≠ placeholder)
                // TODO: Save state
            }
        }
    }

    /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" (+) ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ */
    function handleAddItemClick(event) {
        const addButton = event.target.closest('.entry-add-btn');
        if (!addButton) return;

        const entryArea = addButton.closest('.item-entry-area');
        if (!entryArea) return;

        const shopId = entryArea.dataset.shopId;
        const quantityInput = entryArea.querySelector('.entry-quantity');
        const unitInput = entryArea.querySelector('.entry-unit');
        const itemInput = entryArea.querySelector('.entry-item');

        if (!shopId || !quantityInput || !unitInput || !itemInput) { console.error("‡∏´‡∏≤ elements ‡πÉ‡∏ô entry area ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏£‡πâ‡∏≤‡∏ô:", shopId); return; }

        const quantity = quantityInput.value.trim(); const unit = unitInput.value.trim();
        const itemName = itemInput.value.trim(); const itemNameLower = itemName.toLowerCase();
        console.log(`Add item attempt: Qty=${quantity}, Unit=${unit}, Item=${itemName}, Shop=${shopId}`);

        if (!itemName) { showEntryStatus(entryArea, '‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô!', true); itemInput.focus(); return; }
        if (!quantity) { showEntryStatus(entryArea, '‚ö†Ô∏è ‡∏•‡∏∑‡∏°‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤?', true); quantityInput.focus(); return; }

        const shop = shops.find(s => s.id === shopId);
        if (!shop) { console.error("‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏ô state ID:", shopId); showEntryStatus(entryArea, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ô‡∏µ‡πâ', true); return; }

        const isDuplicate = shop.items.some(item => item.item.toLowerCase() === itemNameLower);
        if (isDuplicate) {
            console.log("Duplicate item found:", itemName);
            showEntryStatus(entryArea, `‚ö†Ô∏è "${itemName}" ‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß!`, true);
            itemInput.focus(); itemInput.select(); return;
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡∏•‡∏á State
        const newItem = { quantity: quantity, unit: unit || '?', item: itemName };
        shop.items.push(newItem);
        const newItemIndex = shop.items.length - 1; // Index ‡∏Ç‡∏≠‡∏á item ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°
        console.log("Item added to state:", shop.items);

        // V17.1: ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô List Area ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        const listAreaUl = tabContentArea.querySelector(`#item-list-${shopId} ul`);
        if (listAreaUl) {
            // ‡∏•‡∏ö placeholder ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
            const placeholder = listAreaUl.querySelector('.item-list-placeholder');
            placeholder?.remove();
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß append
            const newItemRow = createShopItemRow(shopId, newItem, newItemIndex);
            listAreaUl.appendChild(newItemRow);
            // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô scroll ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏ñ‡πâ‡∏≤ list area ‡∏°‡∏µ scroll)
            listAreaUl.parentElement.scrollTop = listAreaUl.parentElement.scrollHeight;
        } else {
            console.error("Could not find list area UL for shop:", shopId);
            // ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠ ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á renderTabContent() ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÅ‡∏ï‡πà‡∏à‡∏∞‡πÄ‡∏™‡∏µ‡∏¢ focus
            renderTabContent(); // Fallback: redraw everything
        }


        // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ + ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å
        showEntryStatus(entryArea, `‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° "${itemName}" ‡πÅ‡∏•‡πâ‡∏ß!`, false);
        quantityInput.value = ''; unitInput.value = ''; itemInput.value = '';
        itemInput.focus();
        // TODO: Save state
    }

     /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞) ‡πÉ‡∏ô List Area (Delegated) */
    function handleDeleteItemInline(event) {
        const deleteButton = event.target.closest('.delete-item-inline-btn');
        if (!deleteButton) return;

        const tableRow = deleteButton.closest('.shop-item-row'); // V17.1: ‡πÉ‡∏ä‡πâ class ‡∏ô‡∏µ‡πâ
        if (!tableRow) return;

        const shopId = tableRow.dataset.shopId;
        const itemIndex = parseInt(tableRow.dataset.itemIndex, 10);

        if (shopId === undefined || isNaN(itemIndex)) {
            console.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏≤ shopId ‡∏´‡∏£‡∏∑‡∏≠ itemIndex ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö inline ‡πÑ‡∏î‡πâ");
            return;
        }

        const shop = shops.find(s => s.id === shopId);
        if (!shop || !shop.items || itemIndex < 0 || itemIndex >= shop.items.length) {
            console.error("‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö inline ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠:", shopId, itemIndex);
            return;
        }
        const itemToDelete = shop.items[itemIndex];

        if (confirm(`‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ "${itemToDelete.item}" (${itemToDelete.quantity} ${itemToDelete.unit}) ‡∏à‡∏£‡∏¥‡∏á‡∏î‡∏¥?`)) {
            // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å state 'shops'
            shop.items.splice(itemIndex, 1);
            console.log("Item deleted inline from state.");
            // TODO: Save state

            // V17.1: ‡∏ß‡∏≤‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏ó‡πá‡∏ö‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï List Area ‡πÅ‡∏•‡∏∞ index ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
            renderTabContent();

             // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô entry status ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô)
             const entryArea = tabContentArea.querySelector(`.item-entry-area[data-shop-id="${shopId}"]`);
             if (entryArea) {
                 showEntryStatus(entryArea, `üóëÔ∏è ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ "${itemToDelete.item}" ‡πÅ‡∏•‡πâ‡∏ß`, false); // ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
             }
        }
    }


    /** V17.1: ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏ã‡πâ‡∏≥ ‡πÉ‡∏ô Entry Area */
    function showEntryStatus(entryAreaElement, message, isError = false) { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        const statusDiv = entryAreaElement?.querySelector('.entry-status'); if (!statusDiv) return; statusDiv.textContent = message; statusDiv.className = `entry-status ${isError ? 'error' : 'success'}`; statusDiv.style.display = 'block'; setTimeout(() => { statusDiv.style.display = 'none'; statusDiv.textContent = ''; statusDiv.className = 'entry-status'; }, 2500);
    }

    // --- Core Logic Functions ---
    function updateOverallSummaryButtonVisibility() { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        const shopSectionsExist = shops.length > 0; if (overallSummaryContainer) { overallSummaryContainer.style.display = shopSectionsExist ? 'block' : 'none'; }
    }
    /** V17.1: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å State Array ('shops') ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ (‡πÄ‡∏û‡∏¥‡πà‡∏° shopId) */
    function getOrderData(shopId = null) { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å V16) */
        if (shopId) { const shop = shops.find(s => s.id === shopId); if (shop) { return [{ shopId: shop.id, shopName: shop.name, items: [...shop.items] }]; } else { return []; } } else { return shops.filter(shop => shop.items.length > 0 || shop.name !== '‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà (‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏Å‡πâ‡∏ä‡∏∑‡πà‡∏≠)').map(shop => ({ shopId: shop.id, shopName: shop.name, items: [...shop.items] })); }
    }
    function formatThaiTimestamp() { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        const now = new Date(); const dateOptions = { year: 'numeric', month: 'long', day: 'numeric', weekday: 'long', timeZone: 'Asia/Bangkok' }; const timeOptions = { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: false, timeZone: 'Asia/Bangkok' }; try { const yearFormatter = new Intl.DateTimeFormat('th-TH-u-ca-buddhist', { year: 'numeric', timeZone: 'Asia/Bangkok' }); const buddhistYear = yearFormatter.format(now); const formattedDate = now.toLocaleDateString('th-TH', dateOptions).replace(/\d{4}/, buddhistYear); const formattedTime = now.toLocaleTimeString('th-TH', timeOptions); return `‡∏™‡∏£‡∏∏‡∏õ ‡∏ì ${formattedDate} ‡πÄ‡∏ß‡∏•‡∏≤ ${formattedTime} ‡∏ô.`; } catch (e) { console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:", e); return `‡∏™‡∏£‡∏∏‡∏õ ‡∏ì ${now.toLocaleString('th-TH')}`; }
    }
    function escapeHtml(unsafe) { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) */
        if (typeof unsafe !== 'string') return ''; return unsafe.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
    }

    /** V17.1: ‡πÅ‡∏™‡∏î‡∏á Modal ‡∏™‡∏£‡∏∏‡∏õ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô V16 - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ + ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö/‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å) */
    function showSummary(shopId = null) {
        // (‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å V16.1)
        console.log("showSummary called for shopId:", shopId); if (!summaryModal || !summaryContent || !summaryTimestampElem || !modalActionsDiv) { console.error("showSummary: Missing required modal elements"); return; } summaryModalShopId = shopId; hasUnsavedChanges = false; const overallTimestamp = formatThaiTimestamp(); summaryTimestampElem.textContent = overallTimestamp; const data = getOrderData(summaryModalShopId); summaryContent.innerHTML = ''; if (copyStatus) copyStatus.style.display = 'none'; document.getElementById(SAVE_CHANGES_BTN_ID)?.remove(); const dataToShow = data;
        if (dataToShow.length === 0) { summaryContent.innerHTML = '<p style="text-align: center; color: grey; margin-top: 1rem;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏ß‡πà‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô</p>'; }
        else { let modalHtml = ''; dataToShow.forEach(shopData => { const currentShopId = shopData.shopId; if (!currentShopId) { console.error("Shop data missing ID in showSummary:", shopData); return; } const shopNameEscaped = escapeHtml(shopData.shopName); modalHtml += `<h3 style="/*...*/">üõí ${shopNameEscaped}</h3>`; if (summaryModalShopId === null) { const timePart = overallTimestamp.split(' ‡πÄ‡∏ß‡∏•‡∏≤ ')[1] || ''; const datePart = overallTimestamp.split(' ‡πÄ‡∏ß‡∏•‡∏≤ ')[0].replace('‡∏™‡∏£‡∏∏‡∏õ ‡∏ì ',''); modalHtml += `<p class="shop-timestamp-print" style="/*...*/">(‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏ì ${datePart} ${timePart})</p>`; } modalHtml += `<table class="summary-table" data-shop-id="${currentShopId}" style="/*...*/"><thead><tr><th style="/*...*/ width: 15%;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th><th style="/*...*/ width: 20%;">‡∏´‡∏ô‡πà‡∏ß‡∏¢</th><th style="/*...*/ width: 50%;">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th><th style="/*...*/ width: 15%;">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th></tr></thead><tbody>`; if (shopData.items && shopData.items.length > 0) { shopData.items.forEach((item, index) => { modalHtml += `<tr data-shop-id="${currentShopId}" data-item-index="${index}"><td style="/*...*/ text-align: center;"><input type="number" value="${escapeHtml(item.quantity)}" class="summary-input summary-quantity" min="0" step="any" aria-label="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á ${escapeHtml(item.item)}"></td><td style="/*...*/"><input type="text" value="${escapeHtml(item.unit)}" class="summary-input summary-unit" list="${GLOBAL_UNITS_DATALIST_ID}" aria-label="‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á ${escapeHtml(item.item)}"></td><td style="/*...*/ word-wrap: break-word;">${escapeHtml(item.item)}</td><td style="/*...*/ text-align: center;"><button class="delete-item-summary-btn" title="‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ${escapeHtml(item.item)}"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash-2"><path d="M3 6h18"/><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"/><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"/><line x1="10" x2="10" y1="11" y2="17"/><line x1="14" x2="14" y1="11" y2="17"/></svg></button></td></tr>`; }); } else { modalHtml += `<tr><td colspan="4" style="/*...*/">(‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</td></tr>`; } modalHtml += `</tbody></table>`; }); summaryContent.innerHTML = modalHtml; if (summaryContent.querySelector('table.summary-table tbody tr[data-item-index]')) { const saveChangesBtn = document.createElement('button'); saveChangesBtn.id = SAVE_CHANGES_BTN_ID; saveChangesBtn.className = 'action-button save-changes-btn'; saveChangesBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-save"><path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"/><polyline points="17 21 17 13 7 13 7 21"/><polyline points="7 3 7 8 15 8"/></svg> ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç`; saveChangesBtn.disabled = true; modalActionsDiv.insertBefore(saveChangesBtn, copySummaryButton); } }
        summaryModal.style.display = 'block';
    }

    /** V17.1: ‡∏õ‡∏¥‡∏î Modal (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô V16) */
    function closeModal() { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å V16) */
        if (hasUnsavedChanges) { if (!confirm("‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô! ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ô‡∏∞ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏à‡∏£‡∏¥‡∏á‡∏î‡∏¥?")) { return; } } if (summaryModal) summaryModal.style.display = 'none'; summaryModalShopId = null; hasUnsavedChanges = false; document.getElementById(SAVE_CHANGES_BTN_ID)?.remove();
    }
    /** V17.1: ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏™‡∏£‡∏∏‡∏õ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô V16) */
    function copySummaryToClipboard() { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å V16) */
        if (hasUnsavedChanges) { alert("‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç' ‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏ô‡∏∞ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î"); return; } if (!summaryContent) return; let textToCopy = ""; const currentTimestamp = formatThaiTimestamp(); textToCopy += currentTimestamp + "\n\n"; const dataToCopy = getOrderData(summaryModalShopId); if(dataToCopy.length === 0) { textToCopy += "(‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠)"; } else { dataToCopy.forEach((shopData, index) => { const shopNameOnly = shopData.shopName.replace(/üõí\s*/, ''); textToCopy += `--- ${shopNameOnly} ---\n`; if (shopData.items.length > 0) { shopData.items.forEach(item => { textToCopy += `${item.quantity} ${item.unit} : ${item.item}\n`; }); } else { textToCopy += "(‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)\n"; } if (index < dataToCopy.length - 1) { textToCopy += "\n"; } }); } if (navigator.clipboard && navigator.clipboard.writeText) { navigator.clipboard.writeText(textToCopy.trim()).then(() => { if (copyStatus) { copyStatus.textContent = '‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß!'; copyStatus.style.color = '#059669'; copyStatus.style.display = 'block'; setTimeout(() => { copyStatus.style.display = 'none'; }, 2500); } }).catch(err => { console.error('Clipboard copy failed:', err); alert('‡∏≠‡∏∏‡πä‡∏õ‡∏™‡πå! ‡∏Å‡πä‡∏≠‡∏õ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏î‡∏¥‡πä'); }); } else { alert('‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥'); }
    }
    /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô V16) */
    function handleDeleteItemInSummary(event) { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å V16) */
        const deleteButton = event.target.closest('.delete-item-summary-btn'); if (!deleteButton) return; const tableRow = deleteButton.closest('tr'); if (!tableRow) return; const shopId = tableRow.dataset.shopId; const itemIndex = parseInt(tableRow.dataset.itemIndex, 10); if (shopId === undefined || isNaN(itemIndex)) { console.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏≤ shopId ‡∏´‡∏£‡∏∑‡∏≠ itemIndex ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏ö‡πÑ‡∏î‡πâ"); return; } const shop = shops.find(s => s.id === shopId); if (!shop || !shop.items || itemIndex < 0 || itemIndex >= shop.items.length) { console.error("‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠:", shopId, itemIndex); return; } const itemToDelete = shop.items[itemIndex]; if (confirm(`‚ö†Ô∏è ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ "${itemToDelete.item}" (${itemToDelete.quantity} ${itemToDelete.unit}) ‡∏à‡∏£‡∏¥‡∏á‡∏î‡∏¥?`)) { shop.items.splice(itemIndex, 1); console.log("Item deleted from state."); /* TODO: Save state */ hasUnsavedChanges = true; const saveBtn = document.getElementById(SAVE_CHANGES_BTN_ID); if(saveBtn) saveBtn.disabled = false; showSummary(summaryModalShopId); if (copyStatus) { copyStatus.textContent = `üóëÔ∏è ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ "${itemToDelete.item}" ‡πÅ‡∏•‡πâ‡∏ß`; copyStatus.style.color = '#b91c1c'; copyStatus.style.display = 'block'; setTimeout(() => { copyStatus.style.display = 'none'; copyStatus.textContent = '‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß!'; copyStatus.style.color = '#059669'; }, 3000); } }
    }
    /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô V16) */
    function handleSaveChangesInSummary() { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å V16) */
        console.log("Save changes clicked"); if (!summaryContent) return; let changesMadeCount = 0; summaryContent.querySelectorAll('table.summary-table tbody tr[data-item-index]').forEach(row => { const shopId = row.dataset.shopId; const itemIndex = parseInt(row.dataset.itemIndex, 10); const quantityInput = row.querySelector('.summary-quantity'); const unitInput = row.querySelector('.summary-unit'); if (shopId === undefined || isNaN(itemIndex) || !quantityInput || !unitInput) { console.warn("‡∏Ç‡πâ‡∏≤‡∏°‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå:", row); return; } const shop = shops.find(s => s.id === shopId); if (!shop || !shop.items || itemIndex < 0 || itemIndex >= shop.items.length) { console.warn("‡∏´‡∏≤ item ‡πÉ‡∏ô state ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö:", shopId, itemIndex); return; } const currentItem = shop.items[itemIndex]; const newQuantity = quantityInput.value.trim(); const newUnit = unitInput.value.trim() || '?'; if (currentItem.quantity !== newQuantity || currentItem.unit !== newUnit) { console.log(`Change detected for item ${itemIndex} in shop ${shopId}: Qty ${currentItem.quantity}->${newQuantity}, Unit ${currentItem.unit}->${newUnit}`); currentItem.quantity = newQuantity; currentItem.unit = newUnit; changesMadeCount++; } }); if (changesMadeCount > 0) { console.log(`${changesMadeCount} changes saved to state.`); /* TODO: Save state */ hasUnsavedChanges = false; const saveBtn = document.getElementById(SAVE_CHANGES_BTN_ID); if(saveBtn) saveBtn.disabled = true; if (copyStatus) { copyStatus.textContent = `üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å ${changesMadeCount} ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!`; copyStatus.style.color = '#059669'; copyStatus.style.display = 'block'; setTimeout(() => { copyStatus.style.display = 'none'; copyStatus.textContent = '‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß!'; }, 3000); } } else { console.log("No changes detected to save."); if (copyStatus) { copyStatus.textContent = `‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å`; copyStatus.style.color = '#6b7280'; copyStatus.style.display = 'block'; setTimeout(() => { copyStatus.style.display = 'none'; copyStatus.textContent = '‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß!'; copyStatus.style.color = '#059669';}, 2000); } hasUnsavedChanges = false; const saveBtn = document.getElementById(SAVE_CHANGES_BTN_ID); if(saveBtn) saveBtn.disabled = true; }
    }
    /** V17.1: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Input ‡πÉ‡∏ô Modal ‡∏™‡∏£‡∏∏‡∏õ (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô V16) */
    function handleSummaryInputChange(event) { /* (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å V16) */
        if (event.target.classList.contains('summary-input')) { if (!hasUnsavedChanges) { console.log("Change detected in summary input."); hasUnsavedChanges = true; const saveBtn = document.getElementById(SAVE_CHANGES_BTN_ID); if (saveBtn) { saveBtn.disabled = false; console.log("Save button enabled."); } } }
    }

    // --- Initialization Function ---
    /** ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏≠‡∏õ */
    async function initializeApp() {
        console.log("--- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô initializeApp (V17.1) ---");
        if (!loadingErrorDiv) { console.error("‡∏´‡∏≤ #loading-error-message ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠!"); return; }
        loadingErrorDiv.textContent = '‚è≥ ‡πÅ‡∏õ‡πä‡∏ö‡∏ô‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á...'; loadingErrorDiv.style.display = 'block'; /* ... styling ... */
        let fetchSuccess = false;
        try {
            const response = await fetch(ITEMS_JSON_PATH, { cache: 'no-cache' }); if (!response.ok) throw new Error(`‡πÇ‡∏´‡∏•‡∏î ${ITEMS_JSON_PATH} ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ (${response.status})`); const jsonData = await response.json(); if (!Array.isArray(jsonData)) throw new Error(`‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô ${ITEMS_JSON_PATH} ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà Array`); masterItemList = jsonData; fetchSuccess = true; loadingErrorDiv.textContent = `‚úÖ ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! ‡πÇ‡∏´‡∏•‡∏î‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á ${masterItemList.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!`; /* ... styling ... */ setTimeout(() => { loadingErrorDiv.style.display = 'none'; }, 3000); createOrUpdateDatalist(GLOBAL_ITEMS_DATALIST_ID, masterItemList);
        } catch (error) {
            console.error('!!! ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ï‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î items.json:', error); loadingErrorDiv.textContent = `‚ùå ‡πÇ‡∏ó‡∏©‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‡πÇ‡∏´‡∏•‡∏î‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ (${error.message}) ...`; /* ... styling ... */ loadingErrorDiv.style.display = 'block';
            // V17.1: ‡πÉ‡∏ä‡πâ initialShopsData ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
            shops = JSON.parse(JSON.stringify(initialShopsData));
            console.warn("‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô");
        } finally {
            createOrUpdateDatalist(GLOBAL_UNITS_DATALIST_ID, BASE_UNITS);
            // V17.1: ‡∏Å‡∏≥‡∏´‡∏ô‡∏î active shop ‡πÅ‡∏£‡∏Å‡πÄ‡∏™‡∏°‡∏≠ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
            if (shops.length > 0 && !activeShopId) {
                activeShopId = shops[0].id;
            } else if (shops.length === 0) {
                activeShopId = null;
            }
            renderTabs(); renderTabContent();
            setupEventListeners();
            console.log("--- initializeApp ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô (V17.1) ---");
        }
    }

    /** V17.1: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Event Listeners ‡∏´‡∏•‡∏±‡∏Å */
    function setupEventListeners() {
        console.log("Setting up event listeners...");

        // ‡∏õ‡∏∏‡πà‡∏° + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ó‡πá‡∏ö/‡∏£‡πâ‡∏≤‡∏ô
        addTabButton?.addEventListener('click', handleAddTabClick);
        // ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡πâ‡∏≤‡∏ô
        cancelNewShopButton?.addEventListener('click', handleCancelNewShop);
        // ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
        saveNewShopButton?.addEventListener('click', handleSaveNewShop);
        // ‡∏Å‡∏î Enter ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà = ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
        newShopNameInput?.addEventListener('keypress', (event) => { if (event.key === 'Enter') { handleSaveNewShop(); } });

        // ‡∏õ‡∏∏‡πà‡∏° ‡∏™‡∏£‡∏∏‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏•‡∏≠‡∏¢)
        overallSummaryButton?.addEventListener('click', () => showSummary());

        // ‡∏õ‡∏∏‡πà‡∏° Modal (‡∏õ‡∏¥‡∏î, Copy, ‡∏õ‡∏¥‡∏î Action)
        modalCloseButton?.addEventListener('click', closeModal);
        copySummaryButton?.addEventListener('click', copySummaryToClipboard);
        closeModalActionButton?.addEventListener('click', closeModal);
        // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ô‡∏≠‡∏Å Modal ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏¥‡∏î
        window.addEventListener('click', (event) => { if (event.target == summaryModal) closeModal(); });

        // --- Event Delegation ---
        // ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ó‡πá‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ï‡∏±‡∏ß‡πÅ‡∏ó‡πá‡∏ö ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö)
        shopTabsContainer?.addEventListener('click', handleTabClick);
        // V17.1: ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡πâ‡∏≤‡∏ô (X ‡∏ö‡∏ô‡πÅ‡∏ó‡πá‡∏ö)
        shopTabsContainer?.addEventListener('click', handleDeleteShopClick);

        // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (+) ‡πÉ‡∏ô Content Area
        tabContentArea?.addEventListener('click', handleAddItemClick);
        // ‡∏Å‡∏î Enter ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á Item Input = ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        tabContentArea?.addEventListener('keypress', (event) => {
             if (event.key === 'Enter' && event.target.classList.contains('entry-item')) {
                 event.preventDefault(); const entryArea = event.target.closest('.item-entry-area');
                 const addButton = entryArea?.querySelector('.entry-add-btn'); addButton?.click();
             }
         });
        // V17.1: ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏ñ‡∏±‡∏á‡∏Ç‡∏¢‡∏∞) ‡πÉ‡∏ô List Area
        tabContentArea?.addEventListener('click', handleDeleteItemInline);


        // --- V16/V17: Listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Modal ‡∏™‡∏£‡∏∏‡∏õ ---
        // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ
        summaryContent?.addEventListener('click', handleDeleteItemInSummary);
        // ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç input ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ
        summaryContent?.addEventListener('input', handleSummaryInputChange);
        // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° Save Changes ‡πÉ‡∏ô Modal Actions
        modalActionsDiv?.addEventListener('click', (event) => {
            if (event.target.id === SAVE_CHANGES_BTN_ID || event.target.closest(`#${SAVE_CHANGES_BTN_ID}`)) {
                handleSaveChangesInSummary();
            }
        });
         console.log("Event listeners setup complete.");
    }

    // --- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ---
    initializeApp();

}); // ‡∏õ‡∏¥‡∏î DOMContentLoaded listener
